from django.utils import timezone
from datetime import timedelta
from .models import Task, SubTask, Status


def create_initial_statuses():
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Å—Ç–∞—Ç—É—Å–æ–≤"""
    Status.objects.get_or_create(name="New")
    Status.objects.get_or_create(name="In progress")
    Status.objects.get_or_create(name="Done")
    print("‚úÖ –°—Ç–∞—Ç—É—Å—ã —Å–æ–∑–¥–∞–Ω—ã: New, In progress, Done")


def perform_all_orm_operations():
    """–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Å–µ—Ö ORM –æ–ø–µ—Ä–∞—Ü–∏–π –∏–∑ –∑–∞–¥–∞–Ω–∏—è"""
    print("=" * 50)
    print("–í–´–ü–û–õ–ù–ï–ù–ò–ï ORM –û–ü–ï–†–ê–¶–ò–ô –î–õ–Ø MANAGER_TASK")
    print("=" * 50)

    # –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ç—É—Å—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    create_initial_statuses()

    # –ü–æ–ª—É—á–∞–µ–º –æ–±—ä–µ–∫—Ç—ã —Å—Ç–∞—Ç—É—Å–æ–≤
    new_status = Status.objects.get(name="New")
    in_progress_status = Status.objects.get(name="In progress")
    done_status = Status.objects.get(name="Done")

    # 1. –°–û–ó–î–ê–ù–ò–ï –ó–ê–ü–ò–°–ï–ô
    print("\n1. üÜï –°–û–ó–î–ê–ù–ò–ï –ó–ê–ü–ò–°–ï–ô")
    print("-" * 30)

    # –û—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞
    main_task = Task.objects.create(
        title="Prepare presentation",
        description="Prepare materials and slides for the presentation",
        status=new_status,
        deadline=timezone.now() + timedelta(days=3)
    )
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞–¥–∞—á–∞: {main_task.title}")

    # –ü–æ–¥–∑–∞–¥–∞—á–∏
    subtask1 = SubTask.objects.create(
        title="Gather information",
        description="Find necessary information for the presentation",
        status=new_status,
        deadline=timezone.now() + timedelta(days=2),
        task=main_task
    )

    subtask2 = SubTask.objects.create(
        title="Create slides",
        description="Create presentation slides",
        status=new_status,
        deadline=timezone.now() + timedelta(days=1),
        task=main_task
    )
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã –ø–æ–¥–∑–∞–¥–∞—á–∏: {subtask1.title}, {subtask2.title}")

    # 2. –ß–¢–ï–ù–ò–ï –ó–ê–ü–ò–°–ï–ô
    print("\n2. üìñ –ß–¢–ï–ù–ò–ï –ó–ê–ü–ò–°–ï–ô")
    print("-" * 30)

    # –ó–∞–¥–∞—á–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "New"
    new_tasks = Task.objects.filter(status__name="New")
    print("üìã –ó–∞–¥–∞—á–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'New':")
    for task in new_tasks:
        print(f"   - {task.title} (–¥–µ–¥–ª–∞–π–Ω: {task.deadline.date()})")

    # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—É—é –ø–æ–¥–∑–∞–¥–∞—á—É —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º "Done" –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    expired_subtask = SubTask.objects.create(
        title="Expired done task",
        description="This task is done but expired",
        status=done_status,
        deadline=timezone.now() - timedelta(days=5),
        task=main_task
    )

    # –ü–æ–¥–∑–∞–¥–∞—á–∏ —Å –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–º —Å—Ç–∞—Ç—É—Å–æ–º "Done"
    overdue_done_subtasks = SubTask.objects.filter(
        status__name="Done",
        deadline__lt=timezone.now()
    )
    print("\n‚è∞ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –ø–æ–¥–∑–∞–¥–∞—á–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'Done':")
    for subtask in overdue_done_subtasks:
        print(f"   - {subtask.title} (–¥–µ–¥–ª–∞–π–Ω: {subtask.deadline.date()})")

    # 3. –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–ê–ü–ò–°–ï–ô
    print("\n3. ‚úèÔ∏è –ò–ó–ú–ï–ù–ï–ù–ò–ï –ó–ê–ü–ò–°–ï–ô")
    print("-" * 30)

    # –ò–∑–º–µ–Ω—è–µ–º —Å—Ç–∞—Ç—É—Å –æ—Å–Ω–æ–≤–Ω–æ–π –∑–∞–¥–∞—á–∏
    main_task.status = in_progress_status
    main_task.save()
    print(f"üîÑ –°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ '{main_task.title}' –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ '{main_task.status}'")

    # –ò–∑–º–µ–Ω—è–µ–º —Å—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è "Gather information"
    subtask1.deadline = timezone.now() - timedelta(days=2)
    subtask1.save()
    print(f"üìÖ –î–µ–¥–ª–∞–π–Ω –¥–ª—è '{subtask1.title}' –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {subtask1.deadline.date()}")

    # –ò–∑–º–µ–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è "Create slides"
    old_description = subtask2.description
    subtask2.description = "Create and format presentation slides"
    subtask2.save()
    print(f"üìù –û–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è '{subtask2.title}' –∏–∑–º–µ–Ω–µ–Ω–æ:")
    print(f"   –ë—ã–ª–æ: {old_description}")
    print(f"   –°—Ç–∞–ª–æ: {subtask2.description}")

    # 4. –£–î–ê–õ–ï–ù–ò–ï –ó–ê–ü–ò–°–ï–ô
    print("\n4. üóëÔ∏è –£–î–ê–õ–ï–ù–ò–ï –ó–ê–ü–ò–°–ï–ô")
    print("-" * 30)

    # –£–¥–∞–ª—è–µ–º –∑–∞–¥–∞—á—É –∏ –≤—Å–µ –µ–µ –ø–æ–¥–∑–∞–¥–∞—á–∏
    task_title = "Prepare presentation"
    task_to_delete = Task.objects.get(title=task_title)
    subtasks_count = task_to_delete.subtasks.count()

    task_to_delete.delete()
    print(f"‚úÖ –ó–∞–¥–∞—á–∞ '{task_title}' –∏ {subtasks_count} –ø–æ–¥–∑–∞–¥–∞—á —É–¥–∞–ª–µ–Ω—ã")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
    remaining_tasks = Task.objects.filter(title=task_title)
    remaining_subtasks = SubTask.objects.filter(task__title=task_title)

    print(f"üìä –û—Å—Ç–∞–ª–æ—Å—å –∑–∞–¥–∞—á —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º '{task_title}': {remaining_tasks.count()}")
    print(f"üìä –û—Å—Ç–∞–ª–æ—Å—å –ø–æ–¥–∑–∞–¥–∞—á –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏: {remaining_subtasks.count()}")

    print("\n" + "=" * 50)
    print("–í–°–ï ORM –û–ü–ï–†–ê–¶–ò–ò –£–°–ü–ï–®–ù–û –í–´–ü–û–õ–ù–ï–ù–´! üéâ")
    print("=" * 50)


# –ï—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if __name__ == "__main__":
    import os
    import django

    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Manager_task_10.settings')
    django.setup()
    perform_all_orm_operations()